<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UpstreamCause>
            <upstreamProject>Release_Build_iOS</upstreamProject>
            <upstreamUrl>job/Release_Build_iOS/</upstreamUrl>
            <upstreamBuild>244</upstreamBuild>
            <upstreamCauses>
              <hudson.model.Cause_-UpstreamCause>
                <upstreamProject>Release_Build_ALL</upstreamProject>
                <upstreamUrl>job/Release_Build_ALL/</upstreamUrl>
                <upstreamBuild>3</upstreamBuild>
                <upstreamCauses>
                  <hudson.model.Cause_-UserIdCause>
                    <userId>shin_donggun</userId>
                  </hudson.model.Cause_-UserIdCause>
                </upstreamCauses>
              </hudson.model.Cause_-UpstreamCause>
            </upstreamCauses>
          </hudson.model.Cause_-UpstreamCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.support.steps.build.BuildUpstreamNodeAction plugin="pipeline-build-step@2.13">
      <upstreamNodeId>156</upstreamNodeId>
      <upstreamRunId>Release_Build_iOS#244</upstreamRunId>
    </org.jenkinsci.plugins.workflow.support.steps.build.BuildUpstreamNodeAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>APPCENTER_API_TOKEN</name>
          <description>AppCenterのAPI TOKEN</description>
          <value>33686d7866a23604057424c52b0474392c5c3b7e</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>APP_NAME</name>
          <description>AppName(AppCenterの）</description>
          <value>Pokepia-iOS-1</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>OUTPUT_DIR</name>
          <description>jejnkinsのワーキングフォルダからの相対パスのappの名前を拡張子まで入れてください。
workspace/build_android/......apk だったら、build_androidまで。</description>
          <value>build_ios/Export</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>copyArtifacts_ProjectName</name>
          <description>成果物をコピーするジョブの名前</description>
          <value>Release_Build_iOS</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>target_filter_artifact</name>
          <description>アーティファクトコピーするときにフィルタするかどうかのフィルタ値</description>
          <value></value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>upstream_build_number</name>
          <description>上流からこのジョブを叩く場合の上流ビルド番号を渡す</description>
          <value>244</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>upstream_build_user</name>
          <description>上流ジョブを叩いたユーザー</description>
          <value>shin_donggun</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>APP_FILENAME</name>
          <description>アップロードするファイル名</description>
          <value>pokepia.ipa</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>DISTRIBUTION_GROUPS</name>
          <description>appCenter配布グループ</description>
          <value>COCONE-QA, Collaborators, POKETRIA Members</value>
        </hudson.model.StringParameterValue>
        <hudson.model.TextParameterValue>
          <name>RELEASENOTE</name>
          <description>リリースノートを記述します</description>
          <value>
                    1.7.2 release
                    
___
                    
GITコミット最新情報

                    
    branch  : refs/heads/release
                    
    hash    : 7b6d5fe
                    </value>
        </hudson.model.TextParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>APPCENTER_API_TOKEN</string>
        <string>APP_NAME</string>
        <string>OUTPUT_DIR</string>
        <string>copyArtifacts_ProjectName</string>
        <string>target_filter_artifact</string>
        <string>upstream_build_number</string>
        <string>upstream_build_user</string>
        <string>APP_FILENAME</string>
        <string>DISTRIBUTION_GROUPS</string>
        <string>RELEASENOTE</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <org.jenkinsci.plugins.buildtriggerbadge.BuildTriggerBadgeAction plugin="buildtriggerbadge@251.vdf6ef853f3f5">
      <cause class="hudson.model.Cause$UpstreamCause" reference="../../hudson.model.CauseAction/causeBag/entry/hudson.model.Cause_-UpstreamCause"/>
    </org.jenkinsci.plugins.buildtriggerbadge.BuildTriggerBadgeAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.8.5">
      <stagesUUID>764a909f-95e3-4a52-9e8d-7565bb2ca23c</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@1.8.5">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>groovy準備</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">checkout scm

                    // To know files are checked out or not
                    sh &apos;&apos;&apos;
                        ls -lhrt
                    &apos;&apos;&apos;

                    // load git utility
                    appcenterUtility = load &quot;pipeline_script/utils/appcenterUtility.groovy&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>成果物コピー</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>copyArtifacts</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>fingerprintArtifacts</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="boolean">true</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>projectName</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">${params.copyArtifacts_ProjectName}</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>target</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">${params.target_filter_artifact}</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>selector</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">${specific(params.upstream_build_number)}</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>AppCenterへのアップロード</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">retry(3) {
                        appCenter apiToken: params.APPCENTER_API_TOKEN,
                            ownerName: env.APPCENTER_OWNER,
                            appName: params.APP_NAME,
                            branchName: &apos;&apos;,
                            buildVersion: params.VERSION,
                            commitHash: &apos;&apos;,
                            distributionGroups: &quot;${params.DISTRIBUTION_GROUPS}&quot;,
                            mandatoryUpdate: false,
                            notifyTesters: true,
                            pathToApp: &quot;${params.OUTPUT_DIR}/${params.APP_FILENAME}&quot;,
                            pathToDebugSymbols: &apos;&apos;,
                            pathToReleaseNotes: &apos;&apos;,
                            releaseNotes: &quot;ビルド${params.upstream_build_number} ${params.upstream_build_user} / RELEASE NOTE: ${params.RELEASENOTE}&quot;

                        def releaseID = appcenterUtility.getReleaseId(env.APPCENTER_OWNER, params.APP_NAME, params.APPCENTER_API_TOKEN)
                        def downloadURL = appcenterUtility.getDownloadURL(env.APPCENTER_OWNER, params.APP_NAME, releaseID)
                        currentBuild.description = downloadURL
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>764a909f-95e3-4a52-9e8d-7565bb2ca23c</uuid>
          </stages>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>appcenterUtility</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1087.1089.v2f1b_9a_b_040e4">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.3">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/develop/20220314_fix_refactor_job</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>56045ac3831ccbe92a5cea14de056c19c9c86e2e</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/develop/20220314_fix_refactor_job</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>41</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>9c403203d573338caeb067053937254a085eb71b</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>177</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry[2]/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://git-1.cocone.jp/projectp3/p3-tools.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.13">
      <revisionStates>
        <entry>
          <string>git https://git-1.cocone.jp/projectp3/p3-tools.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <hudson.plugins.copyartifact.CopyArtifact_-EnvAction plugin="copyartifact@1.46.4"/>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <record>
        <entry>
          <string>pokepia.ipa</string>
          <string>0c997b5fe02519d53405a404de183b88</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2660.vb_c0412dc4e6d">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.32"/>
  </actions>
  <queueId>9111</queueId>
  <timestamp>1655782745566</timestamp>
  <startTime>1655782745592</startTime>
  <result>SUCCESS</result>
  <description>https://install.appcenter.ms/orgs/coconecorp/apps/Pokepia-iOS-1/releases/84
</description>
  <duration>190414</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent any

    environment {
        // groovy Files
        appcenterUtility = &apos;&apos;
    }

    stages {
        stage (&apos;groovy準備&apos;) {
            steps {
                script {
                    // Git checkout before load source the file
                    checkout scm

                    // To know files are checked out or not
                    sh &apos;&apos;&apos;
                        ls -lhrt
                    &apos;&apos;&apos;

                    // load git utility
                    appcenterUtility = load &quot;pipeline_script/utils/appcenterUtility.groovy&quot;
                }
            }
        }
        stage(&apos;成果物コピー&apos;) {
            steps {
                copyArtifacts fingerprintArtifacts: true,
                projectName: params.copyArtifacts_ProjectName,
                target: params.target_filter_artifact,
                selector:specific(params.upstream_build_number)
            }
        }
        stage(&apos;AppCenterへのアップロード&apos;) {
            steps {
                script {
                    retry(3) {
                        appCenter apiToken: params.APPCENTER_API_TOKEN,
                            ownerName: env.APPCENTER_OWNER,
                            appName: params.APP_NAME,
                            branchName: &apos;&apos;,
                            buildVersion: params.VERSION,
                            commitHash: &apos;&apos;,
                            distributionGroups: &quot;${params.DISTRIBUTION_GROUPS}&quot;,
                            mandatoryUpdate: false,
                            notifyTesters: true,
                            pathToApp: &quot;${params.OUTPUT_DIR}/${params.APP_FILENAME}&quot;,
                            pathToDebugSymbols: &apos;&apos;,
                            pathToReleaseNotes: &apos;&apos;,
                            releaseNotes: &quot;ビルド${params.upstream_build_number} ${params.upstream_build_user} / RELEASE NOTE: ${params.RELEASENOTE}&quot;

                        def releaseID = appcenterUtility.getReleaseId(env.APPCENTER_OWNER, params.APP_NAME, params.APPCENTER_API_TOKEN)
                        def downloadURL = appcenterUtility.getDownloadURL(env.APPCENTER_OWNER, params.APP_NAME, releaseID)
                        currentBuild.description = downloadURL
                    }
                }
            }
        }
    }
}
</script>
    <loadedScripts class="map">
      <entry>
        <string>Script1</string>
        <string>/**
 * AppCenterのAPPName を取得する
 * @param  platform               [description]
 * @param  appKind                [description]
 * @return          [description]
 */
def getAppCenterAppName(platform, appKind) {
    // Dictionaryみたいなのがあればそれがいいかも
    if (platform == &quot;ios&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;Pokepia-iOS&apos;,
                    &apos;QA&apos;:&apos;POKEPIA&apos;,
                    &apos;Beta&apos;:&apos;POKEPIA-iOSbeta&apos;,
                    &apos;Release&apos;:&apos;Pokepia-iOS-1&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }
    else if (platform == &quot;android&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;Pokepia-Android&apos;,
                    &apos;QA&apos;:&apos;Pokepia-Android-3&apos;,
                    &apos;Beta&apos;:&apos;POKEPIA-Androidbeta&apos;,
                    &apos;Release&apos;:&apos;Pokepia-Android-1&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }

    return &quot;&quot;
}

/**
 * AppCenter AppのToken情報取得
 * @param  platform               [description]
 * @param  appKind                [description]
 * @return          [description]
 */
def getAppCenterToken(platform, appKind) {
    if (platform == &quot;ios&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;3950f9fbd18dd8e2d18cb970933d125115bf6a67&apos;,
                    &apos;QA&apos;:&apos;027d9e2eab70992a3681db2743ed6ebb3d18d93b&apos;,
                    &apos;Beta&apos;:&apos;7e7c1f4cd71e0803466726400d82e783c5d0b319&apos;,
                    &apos;Release&apos;:&apos;33686d7866a23604057424c52b0474392c5c3b7e&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }
    else if (platform == &quot;android&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;f44294c51d7cec86b1ee9002a3c92a0b22b44322&apos;,
                    &apos;QA&apos;:&apos;ef6bb95d43d77829b8b87f301288273fba6e5d40&apos;,
                    &apos;Beta&apos;:&apos;956368c661c35b21264b6153d1f8e5ad46820401&apos;,
                    &apos;Release&apos;:&apos;585387c9fed92e48c21dd4d2852823d8a14831f0&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }

    retrun &apos;&apos;
}

/**
 * AppCenter配布グループ情報の取得
 * @return         [description]
 */
def getAppCenterDistributionGroups() {
    return &quot;COCONE-QA, Collaborators, POKETRIA Members&quot;
}

/**
 * appcenterの最新のreleaseIDを取得する（最新のreleaseIDを取得するのでタイミングがかち合わないと失敗の可能性はある）
 * NOTE:AppCenter CLIが必要なので注意
 * @param  ownerName               [description]
 * @param  appName                 [description]
 * @param  apiToken                [description]
 * @return           [description]
 */
def getReleaseId(ownerName, appName, apiToken) {
    def script = &quot;&quot;&quot;
    appcenter distribute releases list --app ${ownerName}/${appName} --token ${apiToken} --output json | jq &apos;. | sort_by(.uploadedAt) | reverse | .[0].id&apos;
    &quot;&quot;&quot;
    return sh(script:script, returnStdout:true)
}

/**
 * appcenterのダウンロードURLの取得
 * @param  ownerName               [description]
 * @param  appName                 [description]
 * @param  releaseId               [description]
 * @return           [description]
 */
def getDownloadURL(ownerName, appName, releaseId) {
    return &quot;https://install.appcenter.ms/orgs/${ownerName}/apps/${appName}/releases/${releaseId}&quot;
}

return this
</string>
      </entry>
    </loadedScripts>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1832089465</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>2983911464</long>
      </entry>
      <entry>
        <string>run</string>
        <long>5078782284</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>1431268875</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>1365137374</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>53</iota>
    <head>1:53</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.3">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://git-1.cocone.jp/projectp3/p3-tools.git</url>
            <credentialsId>1f53a4c2-f053-4789-9846-eb486d44a572</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/Users/p3_dev/.jenkins/workspace/Upload_AppCenter</workspace>
      <changelogFile>/Users/p3_dev/.jenkins/jobs/Upload_AppCenter/builds/177/changelog4121513828308353403.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/Users/p3_dev/.jenkins/workspace/Upload_AppCenter</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>