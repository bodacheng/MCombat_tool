<?xml version="1.1" encoding="UTF-8"?>
<flow-build plugin="workflow-job@1145.v7f2433caa07f">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>matsumoto_rika</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <com.sonyericsson.rebuild.RebuildCause plugin="rebuild@1.32">
            <upstreamProject>Release_Build_iOS</upstreamProject>
            <upstreamUrl>view/03%20%E6%9C%AC%E7%95%AA%E3%83%93%E3%83%AB%E3%83%89/job/Release_Build_iOS/</upstreamUrl>
            <upstreamBuild>239</upstreamBuild>
            <upstreamCauses>
              <hudson.model.Cause_-UserIdCause>
                <userId>matsumoto_rika</userId>
              </hudson.model.Cause_-UserIdCause>
              <hudson.model.Cause_-UpstreamCause>
                <upstreamProject>Release_Build_iOS</upstreamProject>
                <upstreamUrl>view/03%20%E6%9C%AC%E7%95%AA%E3%83%93%E3%83%AB%E3%83%89/job/Release_Build_iOS/</upstreamUrl>
                <upstreamBuild>238</upstreamBuild>
                <upstreamCauses>
                  <hudson.model.Cause_-UserIdCause>
                    <userId>matsumoto_rika</userId>
                  </hudson.model.Cause_-UserIdCause>
                  <hudson.model.Cause_-UpstreamCause>
                    <upstreamProject>Release_Build_iOS</upstreamProject>
                    <upstreamUrl>view/03%20%E6%9C%AC%E7%95%AA%E3%83%93%E3%83%AB%E3%83%89/job/Release_Build_iOS/</upstreamUrl>
                    <upstreamBuild>237</upstreamBuild>
                    <upstreamCauses>
                      <hudson.model.Cause_-UserIdCause>
                        <userId>matsumoto_rika</userId>
                      </hudson.model.Cause_-UserIdCause>
                    </upstreamCauses>
                  </hudson.model.Cause_-UpstreamCause>
                </upstreamCauses>
              </hudson.model.Cause_-UpstreamCause>
            </upstreamCauses>
          </com.sonyericsson.rebuild.RebuildCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <com.syhuang.hudson.plugins.listgitbranchesparameter.ListGitBranchesParameterValue plugin="list-git-branches-parameter@0.0.9">
          <name>BRANCH</name>
          <value>refs/heads/release</value>
        </com.syhuang.hudson.plugins.listgitbranchesparameter.ListGitBranchesParameterValue>
        <hudson.model.TextParameterValue>
          <name>RELEASENOTE</name>
          <description>ビルド内容がわかるリリースノートを記入してください</description>
          <value>テストビルドめっちゃテストビルド</value>
        </hudson.model.TextParameterValue>
        <com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterValue plugin="extended-choice-parameter@0.82">
          <name>UNITY_VERSION</name>
          <value>2020.3.21f1</value>
        </com.cwctravel.hudson.plugins.extended__choice__parameter.ExtendedChoiceParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>FORCE_TEST_LOGIN</name>
          <description>TestLoginSceneを強制的に追加</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
        <hudson.model.BooleanParameterValue>
          <name>CLEAR_CACHE</name>
          <description>Libraryフォルダーを削除してビルド（注意：ビルド時間が１時間ほど増えます。）</description>
          <value>false</value>
        </hudson.model.BooleanParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>BRANCH</string>
        <string>RELEASENOTE</string>
        <string>UNITY_VERSION</string>
        <string>FORCE_TEST_LOGIN</string>
        <string>CLEAR_CACHE</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.plugins.jobConfigHistory.JobConfigBadgeAction plugin="jobConfigHistory@2.28.1">
      <configDates>
        <string>2022-06-20_15-42-11</string>
        <string>2022-06-20_13-18-00</string>
      </configDates>
    </hudson.plugins.jobConfigHistory.JobConfigBadgeAction>
    <org.jenkinsci.plugins.buildtriggerbadge.BuildTriggerBadgeAction plugin="buildtriggerbadge@251.vdf6ef853f3f5">
      <cause class="hudson.model.Cause$UserIdCause" reference="../../hudson.model.CauseAction/causeBag/entry/hudson.model.Cause_-UserIdCause"/>
    </org.jenkinsci.plugins.buildtriggerbadge.BuildTriggerBadgeAction>
    <org.jenkinsci.plugins.buildtriggerbadge.BuildTriggerBadgeAction plugin="buildtriggerbadge@251.vdf6ef853f3f5">
      <cause class="com.sonyericsson.rebuild.RebuildCause" reference="../../hudson.model.CauseAction/causeBag/entry[2]/com.sonyericsson.rebuild.RebuildCause"/>
    </org.jenkinsci.plugins.buildtriggerbadge.BuildTriggerBadgeAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.8.5">
      <stagesUUID>d890431b-8bda-4cfa-b845-bc886e532f34</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@1.8.5">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>ワークスペースのクリーン</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">if (params.needCleanWorkspace) {
                        cleanWs()
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>groovy準備</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">checkout scm

                    // To know files are checked out or not
                    sh &apos;&apos;&apos;
                        ls -lhrt
                    &apos;&apos;&apos;

                    // load git utility
                    gitUtility = load &quot;pipeline_script/utils/gitUtility.groovy&quot;
                    appcenterUtility = load &quot;pipeline_script/utils/appcenterUtility.groovy&quot;

                    def slackNotifyClass = load &quot;pipeline_script/utils/notify/SlackNotify.groovy&quot;
                    slackNotify = slackNotifyClass.newInstance(env.SLACK_NOTIFY_CHANNEL, &quot;p3-notify-slack-token&quot;, BUILD_KIND, BUILD_TARGET, &quot;&quot;)
                    slackUtility = load &quot;pipeline_script/utils/notify/slackUtility.groovy&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Git</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def cause = currentBuild.getBuildCauses(&apos;hudson.model.Cause$UserIdCause&apos;)
                    USERNAME = cause.userName

                    wrap([$class: &apos;BuildUser&apos;]) {
                        // slack通知
                        def releaseNote = &quot;:play: *ビルド開始します。* @p3_client \n[Job:$JOB_NAME/BuildNo:$BUILD_ID/URL:${env.BUILD_URL}]\n${params.RELEASENOTE}\n&quot;
                        slackNotify.SetBuildUser(USERNAME.toString() + &quot;/@&quot; + env.BUILD_USER_ID)
                        slackNotify.SetGitInfomation(params.BRANCH, &quot;unknown&quot;)
                        slackNotify.SetReleaseNotes(releaseNote)
                        slackUtility.notifyStartSlackSendMessage(slackNotify)
                    }

                    BRANCH_NAME = gitUtility.get_branch_name(params.BRANCH)
                    checkout([$class: &apos;GitSCM&apos;,
                        branches: [[name: &quot;$BRANCH_NAME&quot;]],
                        extensions: [
                            [$class: &apos;GitLFSPull&apos;],
                            [$class: &apos;CloneOption&apos;, timeout: 60],
                            [$class: &apos;CheckoutOption&apos;, timeout: 60]
                        ],
                        gitTool: &apos;Default&apos;,
                        userRemoteConfigs: [[credentialsId: &quot;$GIT_CREDENTIAL&quot;, url: &quot;$GIT_URL&quot;]]
                    ])

                    // Git情報の取得
                    GIT_LOG = gitUtility.getGitCommitLatestLog()
                    GIT_HASH = gitUtility.getGitRevision()</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>yaml取得/初期化</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def script = $/eval &quot;cat ${YamlFile} | grep -o &apos;productName: .*$&apos; | sed -e &apos;s/productName: &apos;&apos;//&apos;&quot;/$
                    PRODUCT_NAME = sh(script:&quot;${script}&quot;, returnStdout:true)
                    PRODUCT_NAME = PRODUCT_NAME.replaceAll(&quot;\n&quot;, &quot;&quot;)
                    println &apos;-------- PRODUCT_NAME:&apos; + PRODUCT_NAME

                    script = $/eval &quot;cat ${YamlFile} | grep -o &apos;cfBundleName: .*$&apos; | sed -e &apos;s/cfBundleName: &apos;&apos;//&apos;&quot;/$
                    IPA_FILENAME = sh(script:&quot;${script}&quot;, returnStdout:true)
                    IPA_FILENAME = IPA_FILENAME.replaceAll(&quot;\n&quot;, &quot;&quot;)
                    println &apos;-------- IPA_FILENAME:&apos; + IPA_FILENAME

                    APP_OUTPUT_PATH = &quot;$OUTPUT_PATH/Export/${IPA_FILENAME}.ipa&quot;
                    println &apos;-------- APP_OUTPUT_PATH:&apos; + APP_OUTPUT_PATH

                    script = $/eval &quot;cat ${YamlFile} | grep -o &apos;cfBundleExecutableName: .*$&apos; | sed -e &apos;s/cfBundleExecutableName: &apos;&apos;//&apos;&quot;/$
                    IPA_EXECUTABLE_NAME = sh(script:&quot;${script}&quot;, returnStdout:true)
                    IPA_EXECUTABLE_NAME = IPA_EXECUTABLE_NAME.replaceAll(&quot;\n&quot;, &quot;&quot;)
                    println &apos;--------IPA_EXECUTABLE_NAME:&apos; + IPA_EXECUTABLE_NAME

                    // キャッシュ削除が必要な場合Libraryフォルダーを削除
                    if (params.CLEAR_CACHE)
                    {
                        dir(env.LIBRARY_PATH) {
                            deleteDir()
                        }
                    }

                    // ビルド前に出力ディレクトリの削除
                    dir(env.OUTPUT_PATH) {
                        deleteDir()
                    }

                    // 現在のジョブについての説明
                    currentBuild.description = &quot;ブランチ：${BRANCH_NAME}\nGITLOG：${GIT_LOG}&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Assets</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">StringBuilder commandBuilder = new StringBuilder()
                    commandBuilder.append &quot;$UNITY_PATH&quot;
                    commandBuilder.append &quot; -projectPath $WORKSPACE&quot;
                    commandBuilder.append &quot; -quit -batchmode&quot;
                    commandBuilder.append &quot; -executeMethod $ADDRESSABLE_METHOD&quot;
                    commandBuilder.append &quot; -logFile ${WORKSPACE}/Logs/assetbuild_${BUILD_ID}_log.txt&quot;
                    commandBuilder.append &quot; -buildTarget $BUILD_TARGET&quot;
                    commandBuilder.append &quot; -assetProfile P3$BUILD_KIND&quot;

                    sh(script:commandBuilder.toString(), returnStdout:false)</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <options>
                  <options>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTOption>
                      <name>timeout</name>
                      <args>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                          <key>
                            <key>time</key>
                          </key>
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                            <value class="int">90</value>
                          </value>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                          <key>
                            <key>unit</key>
                          </key>
                          <value class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue$ConstantValue">
                            <value class="string">MINUTES</value>
                          </value>
                        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKeyValueOrMethodCallPair>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTOption>
                  </options>
                  <inStage>true</inStage>
                </options>
                <name>Unity</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">StringBuilder commandBuilder = new StringBuilder()
                    commandBuilder.append &quot;$UNITY_PATH&quot;
                    commandBuilder.append &quot; -projectPath $WORKSPACE&quot;
                    commandBuilder.append &quot; -quit -batchmode&quot;
                    commandBuilder.append &quot; -executeMethod $UNITY_METHOD&quot;
                    commandBuilder.append &quot; -logFile ${WORKSPACE}/Logs/build_${BUILD_ID}_log.txt&quot;
                    commandBuilder.append &quot; -buildTarget $BUILD_TARGET&quot;
                    commandBuilder.append &quot; -BuildNumber $BUILD_ID&quot;
                    commandBuilder.append &quot; -OutputPath $OUTPUT_PATH&quot;
                    commandBuilder.append &quot; -buildKind $BUILD_KIND&quot;

                    // 強制的にTestLoginSceneを表示する
                    if (params.FORCE_TEST_LOGIN)
                    {
                        commandBuilder.append &quot; -forceTestLogin&quot;
                    }

                    sh(script:commandBuilder.toString(), returnStdout:false)</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>unlock keychain</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">withCredentials([string(credentialsId: &apos;PCUSER_PASSWORD&apos;, variable: &apos;PC_PASSWORD&apos;)]) {
                        sh &quot;&quot;&quot;
                        security unlock-keychain -p ${PC_PASSWORD} /Users/p3_dev/Library/Keychains/login.keychain
                        &quot;&quot;&quot;
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Xcode</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">&quot;&quot;&quot;
                xcodebuild -project &quot;$OUTPUT_PATH&quot;/Unity-iPhone.xcodeproj \
                -configuration Release \
                clean archive -archivePath &quot;$OUTPUT_PATH&quot;/Archive \
                -scheme Unity-iPhone
                &quot;&quot;&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Export</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>sh</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>script</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">&quot;&quot;&quot;
                xcodebuild -project &quot;$OUTPUT_PATH&quot;/Unity-iPhone.xcodeproj \
                -exportArchive -archivePath &quot;$OUTPUT_PATH&quot;/archive.xcarchive \
                -exportPath &quot;$OUTPUT_PATH&quot;/Export \
                -exportOptionsPlist &quot;$EXPORT_PLIST_DIR&quot;/ExportOptions_&quot;$BUILD_KIND&quot;.plist
                &quot;&quot;&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>ipa保存/version情報取得</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                        <name>archiveArtifacts</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>artifacts</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                                <value class="string">&quot;$APP_OUTPUT_PATH&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>fingerprint</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="boolean">true</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>followSymlinks</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="boolean">false</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def ver_script = $/eval &quot;unzip -p &quot;${APP_OUTPUT_PATH}&quot; Payload/&quot;${IPA_EXECUTABLE_NAME}&quot;.app/Info.plist | plutil -convert json -o - -- - | jq -r .CFBundleShortVersionString&quot;/$
                    println ver_script
                    VERSION = sh(script:&quot;${ver_script}&quot;, returnStdout: true)
                    echo &quot;version=${VERSION}&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>AppCenterのアップロード</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def releaseNote = &quot;&quot;&quot;
                    ${params.RELEASENOTE}
                    \n___
                    \nバージョン情報 : ${VERSION}
                    \nGITコミット最新情報\n
                    \n    branch  : ${BRANCH}
                    \n    hash    : ${GIT_HASH}
                    \n    GITLOG  : ${GIT_LOG}
                    &quot;&quot;&quot;

                    wrap([$class: &apos;BuildUser&apos;]) {
                        APP_NAME = appcenterUtility.getAppCenterAppName(&quot;ios&quot;, BUILD_KIND)
                        BUILDER = env.BUILD_USER_ID
                        // TODO:Upsteram jobは後で変更必要
                        println &apos;appcenterへのアップロード&apos;
                        build job: &apos;Upload_AppCenter&apos;,
                        parameters: [
                        string(name: &apos;APPCENTER_API_TOKEN&apos;, value: APPCENTER_API_TOKEN),
                        string(name: &apos;APP_NAME&apos;, value: APP_NAME),
                        string(name: &apos;OUTPUT_DIR&apos;, value: &quot;$OUTPUT_PATH/Export&quot;),
                        string(name: &apos;copyArtifacts_ProjectName&apos;, value: &apos;Release_Build_iOS&apos;),
                        string(name: &apos;target_filter_artifact&apos;, value: &apos;&apos;),
                        string(name: &apos;upstream_build_number&apos;, value: env.BUILD_NUMBER),
                        string(name: &apos;upstream_build_user&apos;, value: BUILDER),
                        string(name: &apos;APP_FILENAME&apos;, value: &quot;${IPA_FILENAME}.ipa&quot;),
                        string(name: &apos;DISTRIBUTION_GROUPS&apos;, value: appcenterUtility.getAppCenterDistributionGroups()),
                        text(name: &apos;RELEASENOTE&apos;, value: releaseNote)]
                    }

                    RELEASE_ID = appcenterUtility.getReleaseId(env.APPCENTER_OWNER, APP_NAME, APPCENTER_API_TOKEN)
                    println &quot;appcenter ReleaseID:${RELEASE_ID}&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>upload apple store</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">withCredentials([
                    string(credentialsId: &apos;AppleStore_API_Key&apos;, variable: &apos;API_KEY&apos;),
                    string(credentialsId: &apos;AppleStore_API_Issuer&apos;, variable: &apos;API_ISSUE&apos;)
                    ]) {
                        sh &quot;&quot;&quot;
                        xcrun altool --validate-app -f $OUTPUT_PATH/Export/&quot;${IPA_FILENAME}&quot;.ipa -t ios --apiKey ${API_KEY} --apiIssuer ${API_ISSUE} --verbose
                        xcrun altool --upload-app -f $OUTPUT_PATH/Export/&quot;${IPA_FILENAME}&quot;.ipa -t ios --apiKey ${API_KEY} --apiIssuer ${API_ISSUE} --verbose
                        &quot;&quot;&quot;
                    }</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>d890431b-8bda-4cfa-b845-bc886e532f34</uuid>
          </stages>
          <postBuild>
            <conditions>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>success</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      <name>script</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>scriptBlock</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">def preFixReleaseNote = &quot;:kirby::tada:*ビルド成功 [Job:$JOB_NAME/BuildNo:$BUILD_ID]*:tada::kirby:\n${env.BUILD_URL}&quot;
                def releaseNote = &quot;${preFixReleaseNote}\n--\n${params.RELEASENOTE}\n--\n${GIT_LOG}&quot;

                def downloadURL = appcenterUtility.getDownloadURL(env.APPCENTER_OWNER, APP_NAME, RELEASE_ID)
                println &quot;downloadURL:${downloadURL}&quot;
                slackNotify.SetAppCenterInfomation(RELEASE_ID, downloadURL, VERSION)
                slackNotify.SetGitInfomation(BRANCH_NAME, GIT_HASH)
                slackNotify.SetReleaseNotes(releaseNote)
                slackNotify.SetBuildTime(currentBuild.durationString)
                slackUtility.notifySlackSendMessage(slackNotify)</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>failure</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      <name>script</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>scriptBlock</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">def message = &quot;&quot;&quot;${NOTIFY_EMOJI} :skull:*ビルド失敗 [$JOB_NAME:$BUILD_ID]*:skull::alert:
                \n${BUILD_URL}
                \nユーザー : $USERNAME @${BUILDER}
                \nbranch : $BRANCH_NAME
                \nRELEASE_NOTE : ${params.RELEASENOTE}
                &quot;&quot;&quot;
                slackSend channel:env.SLACK_NOTIFY_CHANNEL,
                    teamDomain: env.SLACK_DOMAIN,
                    color: &quot;danger&quot;,
                    message: message</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>aborted</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                      <name>script</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>scriptBlock</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">def message = &quot;&quot;&quot;${NOTIFY_EMOJI} :construction:*ビルド中断 [$JOB_NAME:$BUILD_ID]*:construction:
                \n${BUILD_URL}
                \nユーザー : $USERNAME @${BUILDER}
                \nbranch : $BRANCH_NAME
                \nRELEASE_NOTE : ${params.RELEASENOTE}
                &quot;&quot;&quot;
                slackSend channel:env.SLACK_NOTIFY_CHANNEL,
                    teamDomain: env.SLACK_DOMAIN,
                    color: &quot;warning&quot;,
                    message: message</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
                <condition>always</condition>
                <branch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>archiveArtifacts</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>allowEmptyArchive</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="boolean">true</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>artifacts</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                              <value class="string">&quot;Logs/build_${BUILD_ID}_log.txt, Logs/assetbuild_${BUILD_ID}_log.txt&quot;</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>fingerprint</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="boolean">true</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>followSymlinks</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="boolean">false</value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </branch>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBuildCondition>
            </conditions>
          </postBuild>
          <environment>
            <variables class="linked-hash-map">
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>gitUtility</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>appcenterUtility</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>slackUtility</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>slackNotify</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>NOTIFY_EMOJI</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">:apple3:</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>RELEASE_ID</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>APP_NAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>GIT_URL</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">https://git-1.cocone.jp/projectp3/p3-client</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>GIT_P3_URL</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">https://git-1.cocone.jp/projectp3/p3-assets</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>GIT_CREDENTIAL</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">p3_jenkins_gitlab</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>GIT_HASH</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>BRANCH_NAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>UNITY_PATH</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                  <value class="string">&quot;/Applications/Unity/Hub/Editor/${UNITY_VERSION}/Unity.app/Contents/MacOS/Unity&quot;</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>UNITY_METHOD</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">Cocone.ProjectP3.Client.Build</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>ADDRESSABLE_METHOD</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">Cocone.ProjectP3.BuildAddressableAssets.BatchBuild</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>BUILD_TARGET</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">iOS</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>PRODUCT_NAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>VERSION</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string"></value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>OUTPUT_PATH</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">build_ios</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>BUILD_KIND</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">Release</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>IPA_FILENAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">ipa_file_name</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>IPA_EXECUTABLE_NAME</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">ipa_executable_name</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>BUILD_CONFIG_DIR</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">Assets/App/Editor/Build/Configs</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>EXPORT_PLIST_DIR</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">${BUILD_CONFIG_DIR}/iOS</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>YamlFile</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
                  <value class="string">&quot;${BUILD_CONFIG_DIR}/${BUILD_KIND}BuildSettings.yaml&quot;</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-GStringValue>
              </entry>
              <entry>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                  <key>APPCENTER_API_TOKEN</key>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                  <value class="string">33686d7866a23604057424c52b0474392c5c3b7e</value>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
              </entry>
            </variables>
          </environment>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@1087.1089.v2f1b_9a_b_040e4">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.3">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/feature/force_test_login</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>d26a9c2e47eae57f8e220dc524d8ef762e067eb9</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/force_test_login</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>217</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/develop/20220413_fix_notify_slack_start_release_build</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>ed12334568307cb048d34eb621a799158800d4c5</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/develop/20220413_fix_notify_slack_start_release_build</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>206</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>d958c2787e3b4a387787a3e01176bab9bcb59f78</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>240</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry[3]/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://git-1.cocone.jp/projectp3/p3-tools</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.13">
      <revisionStates>
        <entry>
          <string>git https://git-1.cocone.jp/projectp3/p3-client</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
        <entry>
          <string>git https://git-1.cocone.jp/projectp3/p3-tools</string>
          <hudson.scm.SCMRevisionState_-None reference="../../entry/hudson.scm.SCMRevisionState_-None"/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2660.vb_c0412dc4e6d">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.git.util.BuildData plugin="git@4.11.3">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/features/20211213_build_modification_for_complience</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>3a4cb7edd7af7d6142c4678aeb5e25ec20094fc7</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/features/20211213_build_modification_for_complience</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>50</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>21d762e5d84263868b88af1832acfed64838890b</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>236</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/force_test_login</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>edca900bf813583a8348c5fe9c2d3713694bad7a</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/force_test_login</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>217</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/origin/features/20211206_build_modification</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>40694e96e57bc2c8951ad42bce8c4ccf7f6ae3c2</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/origin/features/20211206_build_modification</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>31</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/purchase_test</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>82e29302ad405080c0c31349ec38261e6f9762d1</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/purchase_test</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>163</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/tmp_for_realtest</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>445c76176ca5ced22f13647f2948c636f43591ef</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/tmp_for_realtest</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>169</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/features/20220106_bug_fix_for_build_ios_export_compliance</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>bf372b880cbef7fbc9a8c590183aa83fb15e239d</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/features/20220106_bug_fix_for_build_ios_export_compliance</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>147</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/fix_titlescene</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>3f6be89e245153fb6a52cb49b2610398aa2b38da</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/fix_titlescene</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>54</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/social_connector_test</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>c416746ce153e2a20be51780fe9fa22b141f1ab8</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/social_connector_test</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>200</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/ios_purchase_bug</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>294de675790302e0a696a4b04357939261a7b38c</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/ios_purchase_bug</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>152</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/sound_problem</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>4aa396998cd833e172555e935b536ca7f63739a3</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/sound_problem</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>170</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/release_asset_alpha</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>ef454c6a31a313cf76e9ab6ab53eedd72aa39efc</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/release_asset_alpha</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>227</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/real_server_setup</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>5e4b27ae3b7aabd3971467183ad38b7dec40b6ad</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/real_server_setup</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>184</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/feature/fix_title_scene</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>edbbce775b1915c6cb73ce83b1d1e47b01183545</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/feature/fix_title_scene</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>112</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/features/20220218_fix_CBFBundleDisplayName_for_ios</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>3de53f56afee156698448bbbb4f6255d3c801c7f</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/features/20220218_fix_CBFBundleDisplayName_for_ios</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>176</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>origin/release</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>c36edf139be8b7322bde1fbe956f9f23e9481b8b</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>origin/release</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>240</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.11.0">
              <sha1>711a80b2bea9810bee8d2cfb20b36a1a79e1004d</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@3.11.0">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>6</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry[16]/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://git-1.cocone.jp/projectp3/p3-client</string>
      </remoteUrls>
      <index>2</index>
    </hudson.plugins.git.util.BuildData>
    <jenkins.model.InterruptedBuildAction>
      <causes class="java.util.Collections$UnmodifiableRandomAccessList" resolves-to="java.util.Collections$UnmodifiableList">
        <c class="list">
          <jenkins.model.CauseOfInterruption_-UserInterruption>
            <user>matsumoto_rika</user>
          </jenkins.model.CauseOfInterruption_-UserInterruption>
        </c>
        <list reference="../c"/>
      </causes>
    </jenkins.model.InterruptedBuildAction>
    <hudson.tasks.Fingerprinter_-FingerprintAction>
      <record>
        <entry>
          <string>Logs/assetbuild_240_log.txt</string>
          <string>2142f5b65793566743cdd439be2abce8</string>
        </entry>
      </record>
    </hudson.tasks.Fingerprinter_-FingerprintAction>
    <com.sonyericsson.rebuild.RebuildAction plugin="rebuild@1.32"/>
  </actions>
  <queueId>8978</queueId>
  <timestamp>1655707335828</timestamp>
  <startTime>1655707335860</startTime>
  <result>ABORTED</result>
  <description>ブランチ：release
GITLOG：Author:松本 りか
Message:[build]新ビルド種別対応
Date:2022/06/20 10:34:56</description>
  <duration>136325</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>ABORTED</result>
    <script>pipeline {
    agent any

    environment {
        // groovy Files
        gitUtility = &apos;&apos;
        appcenterUtility = &apos;&apos;
        slackUtility = &apos;&apos;
        slackNotify = &apos;&apos;
        NOTIFY_EMOJI = &apos;:apple3:&apos;

        // appcenter
        RELEASE_ID = &apos;&apos;
        APP_NAME = &apos;&apos;

        // git
        GIT_URL=&apos;https://git-1.cocone.jp/projectp3/p3-client&apos;
        GIT_P3_URL=&apos;https://git-1.cocone.jp/projectp3/p3-assets&apos;
        GIT_CREDENTIAL=&apos;p3_jenkins_gitlab&apos;
        GIT_HASH = &apos;&apos;

        // branch name
        BRANCH_NAME = &apos;&apos;

        // environment values
        UNITY_PATH=&quot;/Applications/Unity/Hub/Editor/${UNITY_VERSION}/Unity.app/Contents/MacOS/Unity&quot;
        UNITY_METHOD=&apos;Cocone.ProjectP3.Client.Build&apos;
        ADDRESSABLE_METHOD=&apos;Cocone.ProjectP3.BuildAddressableAssets.BatchBuild&apos;

        // build configuration
        BUILD_TARGET=&apos;iOS&apos;
        PRODUCT_NAME=&apos;&apos;
        VERSION=&quot;&quot;
        OUTPUT_PATH=&apos;build_ios&apos;
        BUILD_KIND=&apos;Release&apos;
        IPA_FILENAME=&quot;ipa_file_name&quot;
        IPA_EXECUTABLE_NAME=&quot;ipa_executable_name&quot;
        BUILD_CONFIG_DIR=&apos;Assets/App/Editor/Build/Configs&apos;
        EXPORT_PLIST_DIR=&apos;${BUILD_CONFIG_DIR}/iOS&apos;
        YamlFile = &quot;${BUILD_CONFIG_DIR}/${BUILD_KIND}BuildSettings.yaml&quot;

        // AppCenter
        APPCENTER_API_TOKEN=&apos;33686d7866a23604057424c52b0474392c5c3b7e&apos;// 本番
    }

    stages {
        stage (&apos;ワークスペースのクリーン&apos;) {
            steps {
                script {
                    if (params.needCleanWorkspace) {
                        cleanWs()
                    }
                }
            }
        }
        stage (&apos;groovy準備&apos;) {
            steps {
                script {
                    // Git checkout before load source the file
                    checkout scm

                    // To know files are checked out or not
                    sh &apos;&apos;&apos;
                        ls -lhrt
                    &apos;&apos;&apos;

                    // load git utility
                    gitUtility = load &quot;pipeline_script/utils/gitUtility.groovy&quot;
                    appcenterUtility = load &quot;pipeline_script/utils/appcenterUtility.groovy&quot;

                    def slackNotifyClass = load &quot;pipeline_script/utils/notify/SlackNotify.groovy&quot;
                    slackNotify = slackNotifyClass.newInstance(env.SLACK_NOTIFY_CHANNEL, &quot;p3-notify-slack-token&quot;, BUILD_KIND, BUILD_TARGET, &quot;&quot;)
                    slackUtility = load &quot;pipeline_script/utils/notify/slackUtility.groovy&quot;
                }
            }
        }
        stage(&apos;Git&apos;) {
            steps {
                script{
                    def cause = currentBuild.getBuildCauses(&apos;hudson.model.Cause$UserIdCause&apos;)
                    USERNAME = cause.userName

                    wrap([$class: &apos;BuildUser&apos;]) {
                        // slack通知
                        def releaseNote = &quot;:play: *ビルド開始します。* @p3_client \n[Job:$JOB_NAME/BuildNo:$BUILD_ID/URL:${env.BUILD_URL}]\n${params.RELEASENOTE}\n&quot;
                        slackNotify.SetBuildUser(USERNAME.toString() + &quot;/@&quot; + env.BUILD_USER_ID)
                        slackNotify.SetGitInfomation(params.BRANCH, &quot;unknown&quot;)
                        slackNotify.SetReleaseNotes(releaseNote)
                        slackUtility.notifyStartSlackSendMessage(slackNotify)
                    }

                    BRANCH_NAME = gitUtility.get_branch_name(params.BRANCH)
                    checkout([$class: &apos;GitSCM&apos;,
                        branches: [[name: &quot;$BRANCH_NAME&quot;]],
                        extensions: [
                            [$class: &apos;GitLFSPull&apos;],
                            [$class: &apos;CloneOption&apos;, timeout: 60],
                            [$class: &apos;CheckoutOption&apos;, timeout: 60]
                        ],
                        gitTool: &apos;Default&apos;,
                        userRemoteConfigs: [[credentialsId: &quot;$GIT_CREDENTIAL&quot;, url: &quot;$GIT_URL&quot;]]
                    ])

                    // Git情報の取得
                    GIT_LOG = gitUtility.getGitCommitLatestLog()
                    GIT_HASH = gitUtility.getGitRevision()
                }

            }
        }
        stage(&apos;yaml取得/初期化&apos;) {
            steps {
                script {
                    def script = $/eval &quot;cat ${YamlFile} | grep -o &apos;productName: .*$&apos; | sed -e &apos;s/productName: &apos;&apos;//&apos;&quot;/$
                    PRODUCT_NAME = sh(script:&quot;${script}&quot;, returnStdout:true)
                    PRODUCT_NAME = PRODUCT_NAME.replaceAll(&quot;\n&quot;, &quot;&quot;)
                    println &apos;-------- PRODUCT_NAME:&apos; + PRODUCT_NAME

                    script = $/eval &quot;cat ${YamlFile} | grep -o &apos;cfBundleName: .*$&apos; | sed -e &apos;s/cfBundleName: &apos;&apos;//&apos;&quot;/$
                    IPA_FILENAME = sh(script:&quot;${script}&quot;, returnStdout:true)
                    IPA_FILENAME = IPA_FILENAME.replaceAll(&quot;\n&quot;, &quot;&quot;)
                    println &apos;-------- IPA_FILENAME:&apos; + IPA_FILENAME

                    APP_OUTPUT_PATH = &quot;$OUTPUT_PATH/Export/${IPA_FILENAME}.ipa&quot;
                    println &apos;-------- APP_OUTPUT_PATH:&apos; + APP_OUTPUT_PATH

                    script = $/eval &quot;cat ${YamlFile} | grep -o &apos;cfBundleExecutableName: .*$&apos; | sed -e &apos;s/cfBundleExecutableName: &apos;&apos;//&apos;&quot;/$
                    IPA_EXECUTABLE_NAME = sh(script:&quot;${script}&quot;, returnStdout:true)
                    IPA_EXECUTABLE_NAME = IPA_EXECUTABLE_NAME.replaceAll(&quot;\n&quot;, &quot;&quot;)
                    println &apos;--------IPA_EXECUTABLE_NAME:&apos; + IPA_EXECUTABLE_NAME

                    // キャッシュ削除が必要な場合Libraryフォルダーを削除
                    if (params.CLEAR_CACHE)
                    {
                        dir(env.LIBRARY_PATH) {
                            deleteDir()
                        }
                    }

                    // ビルド前に出力ディレクトリの削除
                    dir(env.OUTPUT_PATH) {
                        deleteDir()
                    }

                    // 現在のジョブについての説明
                    currentBuild.description = &quot;ブランチ：${BRANCH_NAME}\nGITLOG：${GIT_LOG}&quot;
                }
            }
        }
        stage(&apos;Assets&apos;) {
            steps {
               script {
                    StringBuilder commandBuilder = new StringBuilder()
                    commandBuilder.append &quot;$UNITY_PATH&quot;
                    commandBuilder.append &quot; -projectPath $WORKSPACE&quot;
                    commandBuilder.append &quot; -quit -batchmode&quot;
                    commandBuilder.append &quot; -executeMethod $ADDRESSABLE_METHOD&quot;
                    commandBuilder.append &quot; -logFile ${WORKSPACE}/Logs/assetbuild_${BUILD_ID}_log.txt&quot;
                    commandBuilder.append &quot; -buildTarget $BUILD_TARGET&quot;
                    commandBuilder.append &quot; -assetProfile P3$BUILD_KIND&quot;

                    sh(script:commandBuilder.toString(), returnStdout:false)
                }
            }
        }
        stage(&apos;Unity&apos;) {
            options {
                timeout(time: 90, unit: &apos;MINUTES&apos;)
            }

            steps {
                script {
                    StringBuilder commandBuilder = new StringBuilder()
                    commandBuilder.append &quot;$UNITY_PATH&quot;
                    commandBuilder.append &quot; -projectPath $WORKSPACE&quot;
                    commandBuilder.append &quot; -quit -batchmode&quot;
                    commandBuilder.append &quot; -executeMethod $UNITY_METHOD&quot;
                    commandBuilder.append &quot; -logFile ${WORKSPACE}/Logs/build_${BUILD_ID}_log.txt&quot;
                    commandBuilder.append &quot; -buildTarget $BUILD_TARGET&quot;
                    commandBuilder.append &quot; -BuildNumber $BUILD_ID&quot;
                    commandBuilder.append &quot; -OutputPath $OUTPUT_PATH&quot;
                    commandBuilder.append &quot; -buildKind $BUILD_KIND&quot;

                    // 強制的にTestLoginSceneを表示する
                    if (params.FORCE_TEST_LOGIN)
                    {
                        commandBuilder.append &quot; -forceTestLogin&quot;
                    }

                    sh(script:commandBuilder.toString(), returnStdout:false)
                }
            }
        }
        stage(&apos;unlock keychain&apos;) {
            steps {
                script {
                    withCredentials([string(credentialsId: &apos;PCUSER_PASSWORD&apos;, variable: &apos;PC_PASSWORD&apos;)]) {
                        sh &quot;&quot;&quot;
                        security unlock-keychain -p ${PC_PASSWORD} /Users/p3_dev/Library/Keychains/login.keychain
                        &quot;&quot;&quot;
                    }
                }
            }
        }
        stage(&apos;Xcode&apos;) {
            steps {
                sh &quot;&quot;&quot;
                xcodebuild -project &quot;$OUTPUT_PATH&quot;/Unity-iPhone.xcodeproj \
                -configuration Release \
                clean archive -archivePath &quot;$OUTPUT_PATH&quot;/Archive \
                -scheme Unity-iPhone
                &quot;&quot;&quot;
            }
        }
        stage(&apos;Export&apos;) {
            steps {
                sh &quot;&quot;&quot;
                xcodebuild -project &quot;$OUTPUT_PATH&quot;/Unity-iPhone.xcodeproj \
                -exportArchive -archivePath &quot;$OUTPUT_PATH&quot;/archive.xcarchive \
                -exportPath &quot;$OUTPUT_PATH&quot;/Export \
                -exportOptionsPlist &quot;$EXPORT_PLIST_DIR&quot;/ExportOptions_&quot;$BUILD_KIND&quot;.plist
                &quot;&quot;&quot;
            }
        }
        stage(&apos;ipa保存/version情報取得&apos;) {
            steps {
                // ipaファイルの保存
                archiveArtifacts artifacts: &quot;$APP_OUTPUT_PATH&quot;,
                fingerprint: true,
                followSymlinks: false

                script {
                    def ver_script = $/eval &quot;unzip -p &quot;${APP_OUTPUT_PATH}&quot; Payload/&quot;${IPA_EXECUTABLE_NAME}&quot;.app/Info.plist | plutil -convert json -o - -- - | jq -r .CFBundleShortVersionString&quot;/$
                    println ver_script
                    VERSION = sh(script:&quot;${ver_script}&quot;, returnStdout: true)
                    echo &quot;version=${VERSION}&quot;
                }
            }
        }
        stage(&apos;AppCenterのアップロード&apos;) {
            steps {
                script {
                    def releaseNote = &quot;&quot;&quot;
                    ${params.RELEASENOTE}
                    \n___
                    \nバージョン情報 : ${VERSION}
                    \nGITコミット最新情報\n
                    \n    branch  : ${BRANCH}
                    \n    hash    : ${GIT_HASH}
                    \n    GITLOG  : ${GIT_LOG}
                    &quot;&quot;&quot;

                    wrap([$class: &apos;BuildUser&apos;]) {
                        APP_NAME = appcenterUtility.getAppCenterAppName(&quot;ios&quot;, BUILD_KIND)
                        BUILDER = env.BUILD_USER_ID
                        // TODO:Upsteram jobは後で変更必要
                        println &apos;appcenterへのアップロード&apos;
                        build job: &apos;Upload_AppCenter&apos;,
                        parameters: [
                        string(name: &apos;APPCENTER_API_TOKEN&apos;, value: APPCENTER_API_TOKEN),
                        string(name: &apos;APP_NAME&apos;, value: APP_NAME),
                        string(name: &apos;OUTPUT_DIR&apos;, value: &quot;$OUTPUT_PATH/Export&quot;),
                        string(name: &apos;copyArtifacts_ProjectName&apos;, value: &apos;Release_Build_iOS&apos;),
                        string(name: &apos;target_filter_artifact&apos;, value: &apos;&apos;),
                        string(name: &apos;upstream_build_number&apos;, value: env.BUILD_NUMBER),
                        string(name: &apos;upstream_build_user&apos;, value: BUILDER),
                        string(name: &apos;APP_FILENAME&apos;, value: &quot;${IPA_FILENAME}.ipa&quot;),
                        string(name: &apos;DISTRIBUTION_GROUPS&apos;, value: appcenterUtility.getAppCenterDistributionGroups()),
                        text(name: &apos;RELEASENOTE&apos;, value: releaseNote)]
                    }

                    RELEASE_ID = appcenterUtility.getReleaseId(env.APPCENTER_OWNER, APP_NAME, APPCENTER_API_TOKEN)
                    println &quot;appcenter ReleaseID:${RELEASE_ID}&quot;
                }
            }
        }
        stage(&apos;upload apple store&apos;) {
            steps {
                script {
                    withCredentials([
                    string(credentialsId: &apos;AppleStore_API_Key&apos;, variable: &apos;API_KEY&apos;),
                    string(credentialsId: &apos;AppleStore_API_Issuer&apos;, variable: &apos;API_ISSUE&apos;)
                    ]) {
                        sh &quot;&quot;&quot;
                        xcrun altool --validate-app -f $OUTPUT_PATH/Export/&quot;${IPA_FILENAME}&quot;.ipa -t ios --apiKey ${API_KEY} --apiIssuer ${API_ISSUE} --verbose
                        xcrun altool --upload-app -f $OUTPUT_PATH/Export/&quot;${IPA_FILENAME}&quot;.ipa -t ios --apiKey ${API_KEY} --apiIssuer ${API_ISSUE} --verbose
                        &quot;&quot;&quot;
                    }
                }
            }
        }
    }
    post {
        success {
            script {
                def preFixReleaseNote = &quot;:kirby::tada:*ビルド成功 [Job:$JOB_NAME/BuildNo:$BUILD_ID]*:tada::kirby:\n${env.BUILD_URL}&quot;
                def releaseNote = &quot;${preFixReleaseNote}\n--\n${params.RELEASENOTE}\n--\n${GIT_LOG}&quot;

                def downloadURL = appcenterUtility.getDownloadURL(env.APPCENTER_OWNER, APP_NAME, RELEASE_ID)
                println &quot;downloadURL:${downloadURL}&quot;
                slackNotify.SetAppCenterInfomation(RELEASE_ID, downloadURL, VERSION)
                slackNotify.SetGitInfomation(BRANCH_NAME, GIT_HASH)
                slackNotify.SetReleaseNotes(releaseNote)
                slackNotify.SetBuildTime(currentBuild.durationString)
                slackUtility.notifySlackSendMessage(slackNotify)
            }
        }
        failure {
            script {
                def message = &quot;&quot;&quot;${NOTIFY_EMOJI} :skull:*ビルド失敗 [$JOB_NAME:$BUILD_ID]*:skull::alert:
                \n${BUILD_URL}
                \nユーザー : $USERNAME @${BUILDER}
                \nbranch : $BRANCH_NAME
                \nRELEASE_NOTE : ${params.RELEASENOTE}
                &quot;&quot;&quot;
                slackSend channel:env.SLACK_NOTIFY_CHANNEL,
                    teamDomain: env.SLACK_DOMAIN,
                    color: &quot;danger&quot;,
                    message: message
            }
        }
        aborted {
            script {
                def message = &quot;&quot;&quot;${NOTIFY_EMOJI} :construction:*ビルド中断 [$JOB_NAME:$BUILD_ID]*:construction:
                \n${BUILD_URL}
                \nユーザー : $USERNAME @${BUILDER}
                \nbranch : $BRANCH_NAME
                \nRELEASE_NOTE : ${params.RELEASENOTE}
                &quot;&quot;&quot;
                slackSend channel:env.SLACK_NOTIFY_CHANNEL,
                    teamDomain: env.SLACK_DOMAIN,
                    color: &quot;warning&quot;,
                    message: message
            }
        }
        always {
            // ログ保存
            archiveArtifacts allowEmptyArchive: true,
            artifacts: &quot;Logs/build_${BUILD_ID}_log.txt, Logs/assetbuild_${BUILD_ID}_log.txt&quot;,
            fingerprint: true,
            followSymlinks: false
        }
    }
}
</script>
    <loadedScripts class="map">
      <entry>
        <string>Script3</string>
        <string>/**
 * スラック通知ようのクラス
 */
class SlackNotify {
    def channels
    def credentialsId
    def botUserName = &quot;P3 Jenkins ジョブ通知&quot;
    def buildKind
    def assetKind
    def platform
    def releaseNote
    def downloadURL
    def buildUser
    def version
    def buildTime

    // for appcenter
    def appcenterRleaseId

    // for git infomation
    def branch
    def hash

    def SlackNotify(channels, credentialsId, buildKind, platform, releaseNote) {
        this.channels = channels
        this.credentialsId = credentialsId
        this.buildKind = buildKind
        this.platform = platform
        this.releaseNote = releaseNote
    }

    /**
     * ビルドユーザーは後で設定できた方が楽の場合があるので
     * @param user  [description]
     */
    void SetBuildUser(user) {
        this.buildUser = user
    }

    /**
     * アセット種別を指定
     * @param assetKind  [description]
     */
    void SetAssetKind(kind) {
        this.assetKind = kind
    }

    /**
     * releaseNoteを設定する
     * @param releaseNote  [description]
     */
    void SetReleaseNotes(releaseNote) {
        this.releaseNote = releaseNote
    }

    /**
     * appcenterの情報を後から入れられるようにしておく
     * @param id           [description]
     * @param downloadURL  [description]
     */
    void SetAppCenterInfomation(id, downloadURL, version) {
        this.appcenterRleaseId = id
        this.downloadURL = downloadURL
        this.version = version
    }

    /**
     * Gitのブランチ情報などを後から付与
     * @param branch  [description]
     * @param hash    [description]
     */
    void SetGitInfomation(branch, hash) {
        this.branch = branch
        this.hash = hash
    }

    /**
     * かかったビルド時間の設定
     * @param buildTime  [description]
     */
    void SetBuildTime(buildTime) {
        this.buildTime = buildTime
    }
}

return SlackNotify.class
</string>
      </entry>
      <entry>
        <string>Script4</string>
        <string>
// スタイルデータ
STYLE_DATA = [
                    &quot;Android_Dev&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:droid:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;Android Dev&quot;,
                        &quot;NAME&quot; : &quot;Android Dev&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;A3C63E&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;ddf29d&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/droid/5636dcbfb58c7823.png&quot;
                    ],
                    &quot;Android_QA&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:droid:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;Android QA&quot;,
                        &quot;NAME&quot; : &quot;Android QA&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;A3C63E&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;ddf29d&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/droid/5636dcbfb58c7823.png&quot;
                    ],
                	&quot;Android_Beta&quot; : [
                		&quot;BOT_ICON&quot; : &quot;:droid:&quot;,
                		&quot;SHORT_NAME&quot; : &quot;Android Beta&quot;,
                		&quot;NAME&quot; : &quot;Android Beta&quot;,
                		&quot;BAR_COLOR_1&quot; : &quot;A3C63E&quot;,
                		&quot;BAR_COLOR_2&quot; : &quot;ddf29d&quot;,
                		&quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/droid/5636dcbfb58c7823.png&quot;
                	],
                    &quot;Android_Release&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:droid:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;Android 本番&quot;,
                        &quot;NAME&quot; : &quot;Android 本番&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;A3C63E&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;ddf29d&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/droid/5636dcbfb58c7823.png&quot;
                    ],
                    &quot;iOS_Dev&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:apple3:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;iOS Dev&quot;,
                        &quot;NAME&quot; : &quot;iOS Dev&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#ffffff&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#d4d9d8&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
                    &quot;iOS_QA&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:apple3:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;iOS QA&quot;,
                        &quot;NAME&quot; : &quot;iOS QA&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#ffffff&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#d4d9d8&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
                    &quot;iOS_Beta&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:apple3:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;iOS Beta&quot;,
                        &quot;NAME&quot; : &quot;iOS Beta&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#ffffff&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#d4d9d8&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
                    &quot;iOS_Release&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:apple3:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;iOS 本番&quot;,
                        &quot;NAME&quot; : &quot;iOS 本番&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#ffffff&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#d4d9d8&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
                    &quot;Asset_Dev&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:asset:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;Asset Dev|QA&quot;,
                        &quot;NAME&quot; : &quot;Asset Dev|QA&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#49829e&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#a8d8f0&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
                    &quot;Asset_Test&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:asset:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;Asset Test&quot;,
                        &quot;NAME&quot; : &quot;Asset Test&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#49829e&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#a8d8f0&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
                    &quot;Asset_Beta&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:asset:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;Asset Beta&quot;,
                        &quot;NAME&quot; : &quot;Asset Beta&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#49829e&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#a8d8f0&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
                    &quot;Asset_Release&quot; : [
                        &quot;BOT_ICON&quot; : &quot;:asset:&quot;,
                        &quot;SHORT_NAME&quot; : &quot;Asset 本番&quot;,
                        &quot;NAME&quot; : &quot;Asset 本番&quot;,
                        &quot;BAR_COLOR_1&quot; : &quot;#49829e&quot;,
                        &quot;BAR_COLOR_2&quot; : &quot;#a8d8f0&quot;,
                        &quot;ICON_1&quot; : &quot;https://emoji.slack-edge.com/T02BEABAP/apple2/d1fb273e31a23336.png&quot;
                    ],
            	]

/**
 * Slack通知を行う（bot/attachments利用)
 * @param platform iOS or Android
 */
void notifySlackSendMessage(SlackNotify slackNotify) {
    def toMessageTarget = slackNotify.platform + &quot;_&quot; + slackNotify.buildKind
    def style = STYLE_DATA[toMessageTarget]
    println &quot;send message for Platform&quot; + toMessageTarget
    def attachments = [
                        [
                            &quot;fallback&quot;: style[&quot;SHORT_NAME&quot;] + &quot;のダウロードが可能になりました&quot;,
                            &quot;color&quot;: style[&quot;BAR_COLOR_1&quot;],
                            &quot;author_name&quot;: style[&quot;NAME&quot;],
                            &quot;author_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;title&quot;: &quot;Click here to Download&quot;,
                            &quot;text&quot; : slackNotify.releaseNote,
                            &quot;title_link&quot;: slackNotify.downloadURL,
                        ],
                        [
                            &quot;color&quot;: style[&quot;BAR_COLOR_2&quot;],
                            &quot;fields&quot;: [
                                [
                                    &quot;title&quot;: &quot;Branch&quot;,
                                    &quot;value&quot;: slackNotify.branch,
                                    &quot;short&quot;: false
                                ],
                                [
                                    &quot;title&quot;: &quot;Hash&quot;,
                                    &quot;value&quot;: slackNotify.hash,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;Version&quot;,
                                    &quot;value&quot;: slackNotify.version,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;BuildKind&quot;,
                                    &quot;value&quot;: slackNotify.buildKind,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;AssetKind&quot;,
                                    &quot;value&quot;: slackNotify.assetKind,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;Release ID&quot;,
                                    &quot;value&quot;: slackNotify.appcenterRleaseId,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;Builder&quot;,
                                    &quot;value&quot;: slackNotify.buildUser,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;ビルド時間&quot;,
                                    &quot;value&quot;: slackNotify.buildTime,
                                    &quot;short&quot;: true
                                ]
                            ],

                            &quot;footer&quot;: style[&quot;SHORT_NAME&quot;],
                            &quot;footer_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;ts&quot;: &quot;hogehogetime&quot;
                        ]
                    ]

    slackSend channel:slackNotify.channels,
    teamDomain: env.SLACK_DOMAIN,
    tokenCredentialId: slackNotify.credentialsId,
    botUser: true,
    iconEmoji: style[&quot;BOT_ICON&quot;],
    username: slackNotify.botUserName,
    attachments: attachments
}

/**
 * アセットジョブを走らせた場合の成功通知
 * @param slackNotify  [description]
 */
void notifySlackSendMessageForAsset(SlackNotify slackNotify) {
    def toMessageTarget =  &quot;Asset_&quot; + slackNotify.assetKind
    def style = STYLE_DATA[toMessageTarget]
    println &quot;send message for Asset &quot; + toMessageTarget

    def attachments = [
                        [
                            &quot;fallback&quot;: style[&quot;SHORT_NAME&quot;] + &quot;のビルドが完了しました。&quot;,
                            &quot;color&quot;: style[&quot;BAR_COLOR_1&quot;],
                            &quot;author_name&quot;: style[&quot;NAME&quot;],
                            &quot;author_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;title&quot;: &quot;Success Upload Asset&quot;,
                            &quot;text&quot; : slackNotify.releaseNote,
                        ],
                        [
                            &quot;color&quot;: style[&quot;BAR_COLOR_2&quot;],
                            &quot;fields&quot;: [
                                [
                                    &quot;title&quot;: &quot;Branch&quot;,
                                    &quot;value&quot;: slackNotify.branch,
                                    &quot;short&quot;: false
                                ],
                                [
                                    &quot;title&quot;: &quot;Hash&quot;,
                                    &quot;value&quot;: slackNotify.hash,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;Target&quot;,
                                    &quot;value&quot;: slackNotify.assetKind,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;Builder&quot;,
                                    &quot;value&quot;: slackNotify.buildUser,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;ビルド時間&quot;,
                                    &quot;value&quot;: slackNotify.buildTime,
                                    &quot;short&quot;: true
                                ]
                            ],

                            &quot;footer&quot;: style[&quot;SHORT_NAME&quot;],
                            &quot;footer_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;ts&quot;: &quot;hogehogetime&quot;
                        ]
                    ]

    slackSend channel:slackNotify.channels,
    teamDomain: env.SLACK_DOMAIN,
    tokenCredentialId: slackNotify.credentialsId,
    botUser: true,
    iconEmoji: style[&quot;BOT_ICON&quot;],
    username: slackNotify.botUserName,
    attachments: attachments
}

/**
 * Jobを叩いたタイミングで開始通知を出す
 * @param slackNotify  [description]
 */
void notifyStartSlackSendMessage(SlackNotify slackNotify) {
    def toMessageTarget = slackNotify.platform + &quot;_&quot; + slackNotify.buildKind
    def style = STYLE_DATA[toMessageTarget]
    println &quot;send message for Platform&quot; + toMessageTarget
    def attachments = [
                        [
                            &quot;fallback&quot;: style[&quot;SHORT_NAME&quot;] + &quot;のジョブを開始します。&quot;,
                            &quot;color&quot;: style[&quot;BAR_COLOR_1&quot;],
                            &quot;author_name&quot;: style[&quot;NAME&quot;],
                            &quot;author_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;text&quot; : slackNotify.releaseNote,
                        ],
                        [
                            &quot;color&quot;: style[&quot;BAR_COLOR_2&quot;],
                            &quot;fields&quot;: [
                                [
                                    &quot;title&quot;: &quot;Branch&quot;,
                                    &quot;value&quot;: slackNotify.branch,
                                    &quot;short&quot;: false
                                ],
                                [
                                    &quot;title&quot;: &quot;Target&quot;,
                                    &quot;value&quot;: slackNotify.buildKind,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;Builder&quot;,
                                    &quot;value&quot;: slackNotify.buildUser,
                                    &quot;short&quot;: true
                                ]
                            ],

                            &quot;footer&quot;: style[&quot;SHORT_NAME&quot;],
                            &quot;footer_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;ts&quot;: &quot;hogehogetime&quot;
                        ]
                    ]

    slackSend channel:slackNotify.channels,
    teamDomain: env.SLACK_DOMAIN,
    tokenCredentialId: slackNotify.credentialsId,
    botUser: true,
    iconEmoji: style[&quot;BOT_ICON&quot;],
    username: slackNotify.botUserName,
    attachments: attachments
}

/**
 * Jobを叩いたタイミングで開始通知を出す(Assetビルドの通知)
 * @param slackNotify  [description]
 */
void notifyStartSlackSendMessageAsset(SlackNotify slackNotify) {
    def toMessageTarget = &quot;Asset_&quot; + slackNotify.assetKind
    def style = STYLE_DATA[toMessageTarget]
    println &quot;send message for Asset&quot; + toMessageTarget
    def attachments = [
                        [
                            &quot;fallback&quot;: style[&quot;SHORT_NAME&quot;] + &quot;のジョブを開始します。&quot;,
                            &quot;color&quot;: style[&quot;BAR_COLOR_1&quot;],
                            &quot;author_name&quot;: style[&quot;NAME&quot;],
                            &quot;author_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;text&quot; : slackNotify.releaseNote,
                        ],
                        [
                            &quot;color&quot;: style[&quot;BAR_COLOR_2&quot;],
                            &quot;fields&quot;: [
                                [
                                    &quot;title&quot;: &quot;Branch&quot;,
                                    &quot;value&quot;: slackNotify.branch,
                                    &quot;short&quot;: false
                                ],
                                [
                                    &quot;title&quot;: &quot;Target&quot;,
                                    &quot;value&quot;: slackNotify.assetKind,
                                    &quot;short&quot;: true
                                ],
                                [
                                    &quot;title&quot;: &quot;Builder&quot;,
                                    &quot;value&quot;: slackNotify.buildUser,
                                    &quot;short&quot;: true
                                ]
                            ],

                            &quot;footer&quot;: style[&quot;SHORT_NAME&quot;],
                            &quot;footer_icon&quot;: style[&quot;ICON_1&quot;],
                            &quot;ts&quot;: &quot;hogehogetime&quot;
                        ]
                    ]

    slackSend channel:slackNotify.channels,
    teamDomain: env.SLACK_DOMAIN,
    tokenCredentialId: slackNotify.credentialsId,
    botUser: true,
    iconEmoji: style[&quot;BOT_ICON&quot;],
    username: slackNotify.botUserName,
    attachments: attachments
}

return this
</string>
      </entry>
      <entry>
        <string>Script1</string>
        <string>/**
 * Git情報を取得するのを共通化するためのgroovy
 * @param  from_branch_name               [description]
 * @return                  [description]
 */
// ブランチ名の取得
def get_branch_name(from_branch_name) {
    def branch = from_branch_name.replace(&quot;refs/heads/&quot;, &quot;&quot;)

    println &apos;--------------------&apos;
    println &quot;branch_name = ${branch}&quot;
    println &apos;--------------------&apos;
    return branch
}

// gitのリビジョン番号の取得
def getGitRevision() {
    println &apos;*** git revision番号の取得 ***&apos;
    def gitRevisionFull = sh(script:&apos;git rev-parse HEAD&apos;, returnStdout:true)
    println &apos;Git Full Revision Number = &apos; + gitRevisionFull

    // revision Number の抽出(7桁まで区切る）
    def revisionNo = gitRevisionFull.toString().substring(0, 7)

    return revisionNo
}

// ブランチを指定したログを取得
def getGitLogMessage(branch) {
    return sh(script: &quot;git log origin/${branch} --pretty=short -1&quot;, returnStdout: true)
}

// コミットメッセージ情報の取得
def getGitCommitMessage() {
    def commitMessage = sh(script:&apos;git log --format=format:%s -1&apos;, returnStdout:true)
    return commitMessage
}
// コミットメッセージ情報の取得
def getGitCommitAuthor() {
    def author = sh(script:&apos;git log --format=format:%an -1&apos;, returnStdout:true)
    return author
}

//コミット日時の取得
def getGitCommitDate() {
    def date = sh(script:&apos;git log --date=format-local:&quot;%Y/%m/%d %H:%M:%S&quot; --format=format:&quot;%cd&quot; -1&apos;, returnStdout:true)
    return date
}

// commitInfomation(ある程度フィルタする)
def getGitCommitInfomation(branch) {
    def message = &apos;branch:&apos; + branch.GIT_LOCAL_BRANCH +
    &apos;\nAuthor:&apos; + getGitCommitAuthor() +
    &apos;\nMessage:&apos; + getGitCommitMessage()

    return message
}

/**
 * コミット時のdate/Author/messageのログを取得
 * @return [description]
 */
def getGitCommitLatestLog() {
    def message = &apos;Author:&apos; + getGitCommitAuthor() +
    &apos;\nMessage:&apos; + getGitCommitMessage() +
    &apos;\nDate:&apos; + getGitCommitDate()
    return message
}

return this
</string>
      </entry>
      <entry>
        <string>Script2</string>
        <string>/**
 * AppCenterのAPPName を取得する
 * @param  platform               [description]
 * @param  appKind                [description]
 * @return          [description]
 */
def getAppCenterAppName(platform, appKind) {
    // Dictionaryみたいなのがあればそれがいいかも
    if (platform == &quot;ios&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;Pokepia-iOS&apos;,
                    &apos;QA&apos;:&apos;POKEPIA&apos;,
                    &apos;Beta&apos;:&apos;POKEPIA-iOSbeta&apos;,
                    &apos;Release&apos;:&apos;Pokepia-iOS-1&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }
    else if (platform == &quot;android&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;Pokepia-Android&apos;,
                    &apos;QA&apos;:&apos;Pokepia-Android-3&apos;,
                    &apos;Beta&apos;:&apos;POKEPIA-Androidbeta&apos;,
                    &apos;Release&apos;:&apos;Pokepia-Android-1&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }

    return &quot;&quot;
}

/**
 * AppCenter AppのToken情報取得
 * @param  platform               [description]
 * @param  appKind                [description]
 * @return          [description]
 */
def getAppCenterToken(platform, appKind) {
    if (platform == &quot;ios&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;3950f9fbd18dd8e2d18cb970933d125115bf6a67&apos;,
                    &apos;QA&apos;:&apos;027d9e2eab70992a3681db2743ed6ebb3d18d93b&apos;,
                    &apos;Beta&apos;:&apos;7e7c1f4cd71e0803466726400d82e783c5d0b319&apos;,
                    &apos;Release&apos;:&apos;33686d7866a23604057424c52b0474392c5c3b7e&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }
    else if (platform == &quot;android&quot;) {
        def map = [
                    &apos;Dev&apos;:&apos;f44294c51d7cec86b1ee9002a3c92a0b22b44322&apos;,
                    &apos;QA&apos;:&apos;ef6bb95d43d77829b8b87f301288273fba6e5d40&apos;,
                    &apos;Beta&apos;:&apos;956368c661c35b21264b6153d1f8e5ad46820401&apos;,
                    &apos;Release&apos;:&apos;585387c9fed92e48c21dd4d2852823d8a14831f0&apos;
                ]
        if (map.containsKey(appKind)) {
            return map.get(appKind)
        }
    }

    retrun &apos;&apos;
}

/**
 * AppCenter配布グループ情報の取得
 * @return         [description]
 */
def getAppCenterDistributionGroups() {
    return &quot;COCONE-QA, Collaborators, POKETRIA Members&quot;
}

/**
 * appcenterの最新のreleaseIDを取得する（最新のreleaseIDを取得するのでタイミングがかち合わないと失敗の可能性はある）
 * NOTE:AppCenter CLIが必要なので注意
 * @param  ownerName               [description]
 * @param  appName                 [description]
 * @param  apiToken                [description]
 * @return           [description]
 */
def getReleaseId(ownerName, appName, apiToken) {
    def script = &quot;&quot;&quot;
    appcenter distribute releases list --app ${ownerName}/${appName} --token ${apiToken} --output json | jq &apos;. | sort_by(.uploadedAt) | reverse | .[0].id&apos;
    &quot;&quot;&quot;
    return sh(script:script, returnStdout:true)
}

/**
 * appcenterのダウンロードURLの取得
 * @param  ownerName               [description]
 * @param  appName                 [description]
 * @param  releaseId               [description]
 * @return           [description]
 */
def getDownloadURL(ownerName, appName, releaseId) {
    return &quot;https://install.appcenter.ms/orgs/${ownerName}/apps/${appName}/releases/${releaseId}&quot;
}

return this
</string>
      </entry>
    </loadedScripts>
    <durabilityHint>PERFORMANCE_OPTIMIZED</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>5299464</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>947551159</long>
      </entry>
      <entry>
        <string>run</string>
        <long>776551492</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>780903458</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>144</iota>
    <head>1:144</head>
    <done>true</done>
    <resumeBlocked>true</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.3">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://git-1.cocone.jp/projectp3/p3-tools</url>
            <credentialsId>1f53a4c2-f053-4789-9846-eb486d44a572</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/Users/p3_dev/.jenkins/workspace/Release_Build_iOS</workspace>
      <changelogFile>/Users/p3_dev/.jenkins/jobs/Release_Build_iOS/builds/240/changelog8020357406142495657.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" reference="../../org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout/scm"/>
      <node></node>
      <workspace>/Users/p3_dev/.jenkins/workspace/Release_Build_iOS</workspace>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.11.3">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://git-1.cocone.jp/projectp3/p3-client</url>
            <credentialsId>p3_jenkins_gitlab</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>release</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <gitTool>Default</gitTool>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.GitLFSPull/>
          <hudson.plugins.git.extensions.impl.CloneOption>
            <shallow>false</shallow>
            <noTags>false</noTags>
            <timeout>60</timeout>
            <honorRefspec>false</honorRefspec>
          </hudson.plugins.git.extensions.impl.CloneOption>
          <hudson.plugins.git.extensions.impl.CheckoutOption>
            <timeout>60</timeout>
          </hudson.plugins.git.extensions.impl.CheckoutOption>
        </extensions>
      </scm>
      <node></node>
      <workspace>/Users/p3_dev/.jenkins/workspace/Release_Build_iOS</workspace>
      <changelogFile>/Users/p3_dev/.jenkins/jobs/Release_Build_iOS/builds/240/changelog12130383106559546739.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>